name: CI/CD
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'doc/**'
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # MENG/CLOB
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: atra-ob
      - name: Install Protobuf Compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Build Rust
        run: cd atra-ob && cargo build --verbose
      - name: Run Rust tests
        run: cd atra-ob && cargo test --verbose
      # CLI
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install Python dependencies
        run: |
          cd atra-cli
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip list
      - name: Verify Python environment
        run: |
          python --version
          pip --version
          which python
          which pip
      - name: Run Python tests
        run: |
          cd atra-cli
          python -m pip install pytest
          python -m pytest tests/ -v

  integration:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Protobuf Compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Install Python dependencies and generate protos
        run: |
          cd atra-cli
          python -m pip install --upgrade pip
          pip install -r requirements.txt

          mkdir -p generated
          python -m grpc_tools.protoc \
            -I../atra-proto/proto \
            --python_out=./generated \
            --grpc_python_out=./generated \
            ../atra-proto/proto/orderbook.proto
          sed -i 's/import orderbook_pb2/import generated.orderbook_pb2/' generated/orderbook_pb2_grpc.py
          touch generated/__init__.py

          echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Build and start orderbook
        run: |
          docker build -t matcher -f atra-ob/Dockerfile .
          docker compose up -d matcher
          timeout 30s bash -c 'until docker compose ps | grep -q "healthy"; do sleep 1; done'

      - name: Run integration tests
        env:
          atra_OB_HOST: localhost
        run: |
          cd atra-cli
          chmod +x integration_tests.sh
          ./integration_tests.sh

      - name: Show logs on failure
        if: failure()
        run: |
          docker compose ps
          docker compose logs orderbook
